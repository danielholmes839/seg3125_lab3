{"version":3,"sources":["items.ts","components/Nav.tsx","context.tsx","components/Checkbox.tsx","App.tsx","index.tsx"],"names":["Property","View","items","name","price","save","discount","organic","lactose","nuts","kids","sort","a","b","OrderContext","React","createContext","OrderProvider","children","useState","itemList","slice","map","_","quantity","setQuantity","filters","setFilters","Provider","value","add","id","count","copy","remove","total","i","reduce","filter","item","includes","undefined","filterAdd","filterRemove","el","useOrder","useContext","Checkbox","text","checked","setChecked","useEffect","className","type","onChange","e","target","NavButton","setView","to","onClick","Nav","current","CART","PRODUCTS","ItemCard","Products","xmlns","height","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","CartIcon","Cart","deliver","setDeliver","empty","App","view","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adcd18ac.chunk.js","sourcesContent":["export enum Property {\r\n  ORGANIC,\r\n  VEGETARIAN,\r\n  GLUTEN_FREE,\r\n  CONTAINS_LACTOSE,\r\n  CONTAINS_NUTS,\r\n}\r\n\r\nexport type Item = {\r\n  name: string;\r\n  price: number;\r\n  save?: number;\r\n  organic?: boolean;\r\n  lactose?: boolean;\r\n  nuts?: boolean;\r\n  kids?: boolean;\r\n};\r\n\r\nconst items: Item[] = [\r\n  {\r\n    name: \"Apple\",\r\n    price: 1,\r\n    save: 1,\r\n    discount: 25,\r\n    organic: true,\r\n  },\r\n  {\r\n    name: \"Orange\",\r\n    price: 1,\r\n    organic: true,\r\n  },\r\n  {\r\n    name: \"Milk\",\r\n    price: 5,\r\n    organic: true,\r\n    lactose: true,\r\n  },\r\n  {\r\n    name: \"Almond Milk\",\r\n    price: 5,\r\n    organic: true,\r\n    nuts: true,\r\n  },\r\n  {\r\n    name: \"Ice Cream\",\r\n    price: 10,\r\n    lactose: true,\r\n    save: 2,\r\n  },\r\n  {\r\n    name: \"Peanut Butter\",\r\n    price: 3,\r\n    nuts: true,\r\n  },\r\n  {\r\n    name: \"Peanuts\",\r\n    price: 1,\r\n    nuts: true,\r\n    organic: true,\r\n  },\r\n  {\r\n    name: \"Lays Chips\",\r\n    price: 2,\r\n  },\r\n  {\r\n    name: \"Chicken Nuggets\",\r\n    price: 4,\r\n    save: 1,\r\n  },\r\n  {\r\n    name: \"French Fries\",\r\n    price: 2,\r\n    save: 1,\r\n  },\r\n  {\r\n    name: \"Diapers\",\r\n    save: 5,\r\n    price: 30,\r\n    kids: true,\r\n  },\r\n  {\r\n    name: \"Dinosaur Chicken Nuggets\",\r\n    price: 3,\r\n    kids: true,\r\n  },\r\n  {\r\n    name: \"Star Wars Chicken Nuggets\",\r\n    price: 3,\r\n    kids: true,\r\n  },\r\n].sort((a, b) => a.price - b.price);\r\n\r\nexport { items };\r\n","export enum View {\r\n  PRODUCTS,\r\n  CART,\r\n}\r\n\r\ntype Props = { setView: React.Dispatch<View>; current: View };\r\n\r\nconst NavButton: React.FC<{\r\n  setView: React.Dispatch<View>;\r\n  to: View;\r\n  text: string;\r\n}> = ({ setView, to, text }) => {\r\n  return (\r\n    <button\r\n      className={`py-1 px-3 mr-3 text-xs rounded-sm border border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white font-semibold focus:outline-none`}\r\n      onClick={() => setView(to)}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const Nav: React.FC<Props> = ({ setView, current }) => {\r\n  return (\r\n    <div>\r\n      {current === View.CART && (\r\n        <NavButton setView={setView} to={View.PRODUCTS} text=\"< Items\" />\r\n      )}\r\n      {current === View.PRODUCTS && (\r\n        <NavButton setView={setView} to={View.CART} text=\"Checkout >\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Item, items as itemList } from \"items\";\r\n\r\nexport type Filter =\r\n  | \"LACTOSE_INTOLERANT\"\r\n  | \"NUT_ALLERGY\"\r\n  | \"PREFER_ORGANIC\"\r\n  | \"KID_ITEMS\"\r\n  | \"DISCOUNT\";\r\n\r\nexport type Order = {\r\n  items: Item[];\r\n  quantity: number[];\r\n  add: (id: number, count: number) => void;\r\n  remove: (id: number) => void;\r\n  total: () => number;\r\n\r\n  filters: Filter[];\r\n  filter: (item: Item) => boolean;\r\n  filterAdd: (name: Filter) => void;\r\n  filterRemove: (name: Filter) => void;\r\n};\r\n\r\nconst OrderContext = React.createContext<Order>({} as any);\r\n\r\nexport const OrderProvider: React.FC = ({ children }) => {\r\n  const items = useState(itemList.slice())[0];\r\n  const [quantity, setQuantity] = useState(items.map((_) => 0));\r\n\r\n  // Filters\r\n  const [filters, setFilters] = useState<Filter[]>([]);\r\n\r\n  const add = (id: number, count: number = 0) => {\r\n    // Add an item. id should be the index of the item\r\n    let copy = quantity.slice();\r\n    copy[id] += count;\r\n    setQuantity(copy);\r\n  };\r\n\r\n  const remove = (id: number) => {\r\n    // Remove an item. id should be the index of the item\r\n    let copy = quantity.slice();\r\n    copy[id] = 0;\r\n    setQuantity(copy);\r\n  };\r\n\r\n  const filterAdd = (name: Filter): void => {\r\n    setFilters([name, ...filters]);\r\n  };\r\n\r\n  const filterRemove = (name: Filter): void => {\r\n    setFilters(filters.filter((el) => el !== name));\r\n  };\r\n\r\n  const filter = (item: Item): boolean => {\r\n    // True if item should be removed\r\n    if (filters.includes(\"LACTOSE_INTOLERANT\") && item.lactose) {\r\n      return true;\r\n    } else if (filters.includes(\"NUT_ALLERGY\") && item.nuts) {\r\n      return true;\r\n    } else if (filters.includes(\"PREFER_ORGANIC\") && !item.organic) {\r\n      return true;\r\n    } else if (filters.includes(\"KID_ITEMS\") && !item.kids) {\r\n      return true;\r\n    } else if (filters.includes(\"DISCOUNT\") && item.save == undefined) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const total = (): number => {\r\n    return quantity\r\n      .map((count, i) => items[i].price * count)\r\n      .reduce((total, price) => total + price, 0);\r\n  };\r\n\r\n  return (\r\n    <OrderContext.Provider\r\n      value={{\r\n        items,\r\n        quantity,\r\n        add,\r\n        remove,\r\n        total,\r\n        filters,\r\n        filter,\r\n        filterAdd,\r\n        filterRemove,\r\n      }}\r\n    >\r\n      {children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useOrder = () => useContext(OrderContext);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Filter, useOrder } from \"context\";\r\n\r\ntype Props = {\r\n  text: string;\r\n  filter: Filter;\r\n};\r\n\r\nexport const Checkbox: React.FC<Props> = ({ text, filter }) => {\r\n  const { filters } = useOrder();\r\n  const [checked, setChecked] = useState(filters.includes(filter));\r\n  const { filterAdd, filterRemove } = useOrder();\r\n\r\n  useEffect(() => {\r\n    if (!checked) {\r\n      filterRemove(filter);\r\n    } else {\r\n      filterAdd(filter);\r\n    }\r\n  }, [checked]);\r\n  \r\n  return (\r\n    <div className=\"inline mr-5\">\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"align-middle mr-2\"\r\n        checked={checked}\r\n        onChange={(e) => {\r\n          setChecked(e.target.checked);\r\n        }}\r\n      />\r\n      <span className=\"align-middle my-0\">{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import { Item } from \"items\";\r\nimport React, { useState } from \"react\";\r\nimport Checkbox from \"components/Checkbox\";\r\nimport Nav, { View } from \"components/Nav\";\r\nimport { useOrder } from \"context\";\r\n\r\ntype ItemCardProps = {\r\n  id: number;\r\n  item: Item;\r\n};\r\n\r\nconst ItemCard: React.FC<ItemCardProps> = ({ id, item }) => {\r\n  const { add } = useOrder();\r\n\r\n  return (\r\n    <div className=\"shadow mb-3 p-3 inline-block mr-5 mb-5\">\r\n      <h2 className=\"mb-2\">\r\n        {item.name} ${item.price}{\" \"}\r\n        {item.save !== undefined && (\r\n          <span className=\"float-right tracking-wider bg-blue-500 text-white rounded-full px-3 py-1 text-xs font-semibold align-middle\">\r\n            SAVE ${item.save}\r\n          </span>\r\n        )}\r\n      </h2>\r\n      <button\r\n        onClick={() => add(id, 1)}\r\n        className=\"py-1 w-full text-xs rounded-sm bg-green-500 hover:bg-green-600 text-white font-semibold focus:outline-none\"\r\n      >\r\n        Add to Order\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Products: React.FC = () => {\r\n  const { items, filter } = useOrder();\r\n  return (\r\n    <div>\r\n      <div className=\"mb-1\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"inline align-middle mr-2\"\r\n          height={30}\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={1.5}\r\n            d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\r\n          />\r\n        </svg>\r\n        <h1 className=\"text-4xl font-semibold inline align-middle\">Products</h1>\r\n      </div>\r\n      <div className=\"mb-5\">\r\n        <Checkbox text=\"Lactose Intolerant\" filter={\"LACTOSE_INTOLERANT\"} />\r\n        <Checkbox text=\"Nut Allergy\" filter={\"NUT_ALLERGY\"} />\r\n        <Checkbox text=\"Organic Only\" filter={\"PREFER_ORGANIC\"} />\r\n        <Checkbox text=\"Kids Items\" filter={\"KID_ITEMS\"} />\r\n        <Checkbox text=\"Discount\" filter={\"DISCOUNT\"} />\r\n      </div>\r\n      <div className=\"grid sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-5\">\r\n        {items.map((item, i) => {\r\n          if (filter(item)) return;\r\n          return <ItemCard id={i} item={item} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CartIcon: React.FC = () => {\r\n  return (\r\n    <>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"inline align-middle mr-2\"\r\n        height={30}\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth={1.5}\r\n          d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\r\n        />\r\n      </svg>\r\n    </>\r\n  );\r\n};\r\nconst Cart: React.FC = () => {\r\n  const { items, quantity, remove, total } = useOrder();\r\n  const [deliver, setDeliver] = useState(true);\r\n  const empty = quantity.reduce((a, b) => a + b, 0) === 0;\r\n\r\n  return (\r\n    <div className=\"shadow px-5 py-3 mb-5\">\r\n      {/* Title */}\r\n      <div>\r\n        <CartIcon />\r\n        <h1 className=\"text-4xl font-semibold inline align-middle\">Order</h1>\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        {empty && (\r\n          <p className=\"text-red-500\">\r\n            Please order at least one item before completing checkout\r\n          </p>\r\n        )}\r\n\r\n        {!empty && (\r\n          <div>\r\n            {/* Items in the order */}\r\n            <div>\r\n              {items.map((item, i) => {\r\n                const count = quantity[i];\r\n                if (count === 0) return;\r\n                return (\r\n                  <div className=\"mb-1 w-96\">\r\n                    <h2>\r\n                      {item.name} x {count} - ${item.price * count}{\" \"}\r\n                      <button\r\n                        onClick={() => remove(i)}\r\n                        className=\"float-right text-red-500\"\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </h2>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Price */}\r\n            <div className=\"mt-3\">\r\n              <p className=\"font-semibold\">\r\n                Total: ${total()}{\" \"}\r\n                {deliver && (\r\n                  <span className=\"text-red-500 text-xs align-top\">\r\n                    +$5 Delivery Fee\r\n                  </span>\r\n                )}\r\n              </p>\r\n            </div>\r\n\r\n            {/* Order method */}\r\n            <div className=\"mt-5\" onChange={() => setDeliver(!deliver)}>\r\n              <input\r\n                className=\"mr-1\"\r\n                checked={deliver}\r\n                type=\"radio\"\r\n                value=\"deliver\"\r\n                name=\"order-type\"\r\n              />\r\n              <span className=\"mr-4\">Delivery</span>\r\n              <input\r\n                checked={!deliver}\r\n                className=\"mr-1\"\r\n                type=\"radio\"\r\n                value=\"pickup\"\r\n                name=\"order-type\"\r\n              />\r\n              <span className=\"mr-4\">Pickup</span>\r\n            </div>\r\n\r\n            {/* Checkout button */}\r\n            <button className=\"bg-blue-500 hover:bg-blue-600 px-4 py-1 mr-2 mt-2 text-white text-sm font-semibold focus:outline-none rounded-sm\">\r\n              Checkout\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  const [view, setView] = useState<View>(View.PRODUCTS);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-5\">\r\n      <h1 className=\"text-6xl mb-5\">Loblaws</h1>\r\n\r\n      {view === View.PRODUCTS && <Products />}\r\n\r\n      {view === View.CART && <Cart />}\r\n\r\n      <Nav setView={setView} current={view} />\r\n\r\n      <p className=\"absolute bottom-0 mb-5 text-gray-500\">\r\n        Created by Daniel Holmes\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { OrderProvider } from \"context\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./css/custom.css\";\r\nimport \"./css/tailwind.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <OrderProvider>\r\n      <App />\r\n    </OrderProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}